[DEFAULT]
logger_name = root
logger_conf_file = configuration/logging.conf
start_date = date('2015-06-07 00:00:00')
end_date = date('2015-06-14 23:59:59')
step_size_in_sec = 691200
window_analyze_size_in_sec = 691200
keep_results_for = 2246400
max_concurrent_jobs = 1
domain=Microblog
targeted_classes = ['author_type']
social_network_name = Clickbait_Challenge

[Logger]
logger_conf_file = configuration/logging.conf
logger_name = root
file_name = log/leadspotting.log
level = logging.INFO

[OperatingSystem]
linux=False
windows=True

[DB]
DB_path = data/input/
DB_name_prefix = Leadspotting_
DB_name_suffix = database.db
DB_path_to_extension = lib/extension-functions
dialect_name = sqlalchemy.dialects.sqlite
remove_on_setup = False
remove_on_teardown = False
dropall_on_setup = False
dropall_on_teardown = False

######################################################################################################
# Impotera
######################################################################################################

[CsvImporter]
data_folder = "data/input/datasets/Leadspotting/posts"

# ************** DATASET BUILDER MODULE **********************
[DatasetBuilderConfig]
clean_authors_features_table = True

[Image_Downloader]
path_for_downloaded_images = 'data/output/Image_Downloader/'

[LDATopicModel]
number_of_topics=10
num_of_terms_in_topic = 12
stopword_file = lib/eng_stopwords.txt
stem_language = ENG

[TopicDistrobutionVisualizationGenerator]
# If it is false you should insert a CSV file under prediction_csv_path
read_predictions_from_db = False
include_unlabeled_predictions = True
include_labeled_authors_in_visualization = True
targeted_class_field_name = author_type
optional_classes = {'good_actor': 0, 'bad_actor': 1}
font_path = "topic_distribution_visualization/Mukadimah.ttf"
#prediction_csv_path = "data/output/topic_distribution_visualization/predictions.csv"
prediction_csv_path = "data/output/topic_distribution_visualization/dummy_labeling.csv"
output_dir = "data/output/topic_distribution_visualization/"
buckets = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
